{"version": 3, "mappings": "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", "sources": ["tojs.py"], "names": ["out", "inp", "inp.endswith", "lines", "csv", "csv.splitlines", "scsv", "lines.length", "line", "li", "elements", "element", "in_quotes", "character", "elements.append", "scsv.append", "table", "markdown_table", "\" | \".join", "table[0].length", "row", "out.splitlines", "buldun", "lineindex", "lines[lineindex].startswith", "lines[lineindex].endswith", "con", "con.strip", "out.replace", "customelement", "markdown_tablo", "csvtomdtable", "out.replace(\"<csv>\\n\", \"\", 1).replace", "out.replace(\"<csv>\\n\", \"\", 1).replace(\"</csv>\\n\", \"\", 1).replace", "lt", "customelement2", "customelement2(\"l\").split", "customelement2(\"l\").split(\"\\n\")[0].split", "customelement2(\"l\").split(\"\\n\")[0].split(\"\\\"\").length", "newcon", "lastnum", "customelement(\"l\").splitlines", "out.replace((customelement2(\"l\").split(\"\\n\")[0] + \"\\n\"), \"\", 1).replace", "out.replace((customelement2(\"l\").split(\"\\n\")[0] + \"\\n\"), \"\", 1).replace(\"</l>\\n\", \"\", 1).replace", "cmd", "customelement2(\"o\").split", "customelement2(\"o\").split(\"\\n\")[0].split", "customelement2(\"o\").split(\"\\n\")[0].split(\"\\\"\").length", "out.replace((customelement2(\"o\").split(\"\\n\")[0] + \"\\n\"), \"\", 1).replace", "out.replace((customelement2(\"o\").split(\"\\n\")[0] + \"\\n\"), \"\", 1).replace(\"</o>\\n\", \"\", 1).replace", "lindex", "lines.index", "arg", "line.split", "line.startswith", "arg.length", "cargs", "i", "\"\\n\".join", "html"], "sourcesContent": ["def convertmd(inp, html=False):\n    out=inp\n    if not inp.endswith(\"\\n\"):\n        out = inp+\"\\n\"\n    else:\n        out = inp\n    def csvtomdtable(csv):\n        lines = csv.splitlines()\n        scsv = []\n        for li in range(0, len(lines)):\n            line = lines[li]\n            elements = []\n            element = \"\"\n            in_quotes = False\n            for character in line:\n                if character == '\"' or character == \"'\":\n                    in_quotes = not in_quotes\n                elif character == ',' and not in_quotes:\n                    elements.append(element)\n                    element = \"\"\n                else:\n                    element += character\n            elements.append(element)\n            scsv.append(elements)\n        table=scsv\n        markdown_table = \"\"\n        markdown_table += \"| \" + \" | \".join(table[0]) + \" |\\n\"\n        markdown_table += \"| \" + \" | \".join([\"---\"] * len(table[0])) + \" |\\n\"\n        for row in table[1:]:\n            markdown_table += \"| \" + \" | \".join(row) + \" |\\n\"\n        return markdown_table\n    def customelement(element: str):\n        lines = out.splitlines()\n        buldun=0\n        for lineindex in range(0, len(lines)-1):\n            if lines[lineindex].startswith(\"<\"+element) and lines[lineindex].endswith(\">\") and buldun!=1:\n                con = \"\"\n                for line in lines[lineindex+1:]:\n                    if line != \"</\"+element+\">\":\n                        con += line + \"\\n\"\n                    else:\n                        return con.strip()\n                buldun=1\n        return None\n    def customelement2(element):\n        lines = out.splitlines()\n        buldun=0\n        for lineindex in range(0, len(lines)-1):\n            if lines[lineindex].startswith(\"<\"+element) and lines[lineindex].endswith(\">\") and buldun!=1:\n                con = lines[lineindex]+\"\\n\"\n                for line in lines[lineindex+1:]:\n                    if line != \"</\"+element+\">\":\n                        con += line + \"\\n\"\n                    else:\n                        return con.strip()\n                buldun=1\n        return None\n    out = out.replace(\"<center>\", '<div align=\"center\">')\n    out = out.replace(\"</center>\", \"</div>\")\n    while customelement(\"csv\"):\n        markdown_tablo = csvtomdtable(customelement(\"csv\"))\n        out = out.replace(\"<csv>\\n\", \"\", 1).replace(\"</csv>\\n\", \"\", 1).replace(customelement(\"csv\"), markdown_tablo, 1)\n    while customelement(\"l\"):\n        lt=\"\"\n        if len(customelement2(\"l\").split(\"\\n\")[0].split(\"\\\"\"))>1:\n            lt=customelement2(\"l\").split(\"\\n\")[0].split(\"\\\"\")[1]\n        newcon=\"\"\n        lastnum = 0\n        for line in customelement(\"l\").splitlines():\n            if lt==\"chbox\":\n                newcon += \"- [ ] \"+line+\"\\n\"\n            elif lt==\"chedbox\":\n                newcon += \"- [X] \"+line+\"\\n\"\n            elif lt==\"num\":\n                newcon += f\"{str(lastnum+1)}) \"+line+\"\\n\"\n                lastnum+=1\n            else:\n                newcon += \"- \"+line+\"\\n\"\n        out = out.replace(customelement2(\"l\").split(\"\\n\")[0]+\"\\n\", \"\", 1).replace(\"</l>\\n\", \"\", 1).replace(customelement(\"l\"), newcon, 1)\n    while customelement(\"o\"):\n        cmd=\"\"\n        if len(customelement2(\"o\").split(\"\\n\")[0].split(\"\\\"\"))>1:\n            cmd=customelement2(\"o\").split(\"\\n\")[0].split(\"\\\"\")[1]\n        newcon=f\"\"\"```bash\n    gh@repo:/$ {cmd}\n    {customelement(\"o\")}\n    gh@repo:/$ \u00e2\u2013\u02c6\n    ```\"\"\"\n        out = out.replace(customelement2(\"o\").split(\"\\n\")[0]+\"\\n\", \"\", 1).replace(\"</o>\\n\", \"\", 1).replace(customelement(\"o\"), newcon, 1)\n    lines=out.splitlines()\n    for line in lines:\n        lindex=lines.index(line)\n        arg=line.split(\" \")\n        if line.startswith(\"$ytembed\"):\n            if len(arg)==3:\n                lines[lindex]=f'[<img src=\"https://img.youtube.com/vi/{arg[1]}/maxresdefault.jpg\" width=\"{arg[2]}\" />](https://www.youtube.com/watch?v={arg[1]})'\n            if len(arg)==4:\n                lines[lindex]=f'[<img src=\"https://img.youtube.com/vi/{arg[1]}/maxresdefault.jpg\" width=\"{arg[2]}\" height=\"{arg[3]}\" />](https://www.youtube.com/watch?v={arg[1]})'\n            if len(arg)==2:\n                lines[lindex]=f'[<img src=\"https://img.youtube.com/vi/{arg[1]}/maxresdefault.jpg\" width=\"400\" />](https://www.youtube.com/watch?v={arg[1]})'\n        cargs=\"\"\n        if len(arg)>3:\n            for i in arg[3:]:\n                if i!=\"\":\n                    cargs+=\"&\"+i\n        if line.startswith(\"$email\"):\n            if len(arg)==2:\n                lines[lindex]=f'[<img src=\"https://img.shields.io/badge/E--Mail-gray.svg?&logo=maildotru&logoColor=white\" />](mailto:{arg[1]})'\n            if len(arg)==3:\n                lines[lindex]=f'[<img src=\"https://img.shields.io/badge/E--Mail-{arg[2]}.svg?&logo=maildotru&logoColor=white\" />](mailto:{arg[1]})'\n            if len(arg)>3:\n                lines[lindex]=f'[<img src=\"https://img.shields.io/badge/E--Mail-{\"gray\" if arg[2]==\"\" else arg[2]}.svg?&logo=maildotru{cargs}\" />](mailto:{arg[1]})'\n        if line.startswith(\"$github\"):\n            if len(arg)==2:\n                lines[lindex]=f'[<img src=\"https://img.shields.io/badge/Github-%2324292e.svg?&logo=github&logoColor=white\" />](https://github.com/{arg[1]})'\n            if len(arg)==3:\n                lines[lindex]=f'[<img src=\"https://img.shields.io/badge/Github-{arg[2]}.svg?&logo=github&logoColor=white\" />](https://github.com/{arg[1]})'\n            if len(arg)>3:\n                lines[lindex]=f'[<img src=\"https://img.shields.io/badge/Github-{\"%2324292e\" if arg[2]==\"\" else arg[2]}.svg?&logo=github{cargs}\" />](https://github.com/{arg[1]})'\n        if line.startswith(\"$website\"):\n            if len(arg)==2:\n                lines[lindex]=f'[<img src=\"https://custom-icon-badges.demolab.com/badge/WebSite-black.svg?&logo=globe&logoColor=darkgreen\" />](https://{arg[1].replace(\"https://\", \"\")})'\n            if len(arg)==3:\n                lines[lindex]=f'[<img src=\"https://custom-icon-badges.demolab.com/badge/WebSite-{arg[2]}.svg?&logo=globe&logoColor=darkgreen\" />](https://{arg[1].replace(\"https://\", \"\")})'\n            if len(arg)>3:\n                lines[lindex]=f'[<img src=\"https://custom-icon-badges.demolab.com/badge/WebSite-{\"black\" if arg[2]==\"\" else arg[2]}.svg?&logo=globe{cargs}\" />](https://{arg[1].replace(\"https://\", \"\")})'\n        if line.startswith(\"$badge\"):\n            if len(arg)==2:\n                lines[lindex]=f'![custom badge](https://img.shields.io/badge/{arg[1]}-a.svg)'\n            if len(arg)==3:\n                lines[lindex]=f'![custom badge](https://img.shields.io/badge/{arg[1]}-{arg[2]}.svg)'\n            if len(arg)>3:\n                lines[lindex]=f'![custom badge](https://img.shields.io/badge/{arg[1]}-{\"a\" if arg[2]==\"\" else arg[2]}.svg?{cargs})'\n        if line.startswith(\"$buymeacoffee\"):\n            if len(arg)==2:\n                lines[lindex]=f'[<img src=\"https://img.shields.io/badge/Donate-Buy%20Me%20A%20Coffee-orange.svg?&logo=buymeacoffee&logoColor=yellow\" />](https://buymeacoffe.com/{arg[1]})'\n            if len(arg)==3:\n                lines[lindex]=f'[<img src=\"https://img.shields.io/badge/Donate-Buy%20Me%20A%20Coffee-{arg[2]}.svg?&logo=buymeacoffee&logoColor=yellow\" />](https://buymeacoffe.com/{arg[1]})'\n            if len(arg)>3:\n                lines[lindex]=f'[<img src=\"https://img.shields.io/badge/Donate-Buy%20Me%20A%20Coffee-{\"orange\" if arg[2]==\"\" else arg[2]}.svg?&logo=buymeacoffee{cargs}\" />](https://buymeacoffe.com/{arg[1]})'\n        if line.startswith(\"$views\"):\n            if len(arg)==2:\n                lines[lindex]=f'![profile views](https://komarev.com/ghpvc/?username={arg[1]}&)'\n            if len(arg)==3:\n                lines[lindex]=f'![profile views](https://komarev.com/ghpvc/?username={arg[1]}&&style={arg[2]})'\n        if line.startswith(\"$stats\"):\n            if len(arg)==2:\n                lines[lindex]=f'![My GitHub Stats](https://github-readme-stats.vercel.app/api?username={arg[1]}&show_icons=true)'\n            if len(arg)==3:\n                lines[lindex]=f'![My GitHub Stats](https://github-readme-stats.vercel.app/api?username={arg[1]}&show_icons={arg[2]})'\n            if len(arg)>3:\n                lines[lindex]=f'![My GitHub Stats](https://github-readme-stats.vercel.app/api?username={arg[1]}&show_icons={arg[2] if arg[2]==\"\" else arg[2]}{cargs})'\n        if line.startswith(\"$toplangs\"):\n            if len(arg)==2:\n                lines[lindex]=f'![My GitHub Stats](https://github-readme-stats.vercel.app/api/top-langs/?username={arg[1]})'\n            if len(arg)==3:\n                lines[lindex]=f'![My GitHub Stats](https://github-readme-stats.vercel.app/api/top-langs/?username={arg[1]}&layout={arg[2]})'\n            if len(arg)>3:\n                lines[lindex]=f'![My GitHub Stats](https://github-readme-stats.vercel.app/api/top-langs/?username={arg[1]}&layout={arg[2]}{cargs})'\n    out=\"\\n\".join(lines)\n    if html==True:\n        html=\"\"\"<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>\nbody {\nmargin: 0;\npadding: 25px;\nbackground-color: #0d1117;\ncolor: #e6edf3;\n}\ndiv{\n    display: block;\n    padding: 25px;\n    padding-left: 40px;\n    padding-right: 40px;\n    border-color: #30363d;\n    border-width: 1px;\n    border-radius: 10px;\n    border-style: solid;\n    font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",\"Noto Sans\",Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\";\n    font-size: 16px;\n    line-height: 1.5;\n    word-wrap: break-word;\n}\npre{\n    background-color: #161b22;\n    border-radius: 5px;\n    border-width: 10px;\n    border-style: solid;\n    border-color: #161b22;\n}\npre code{\n    background-color: #161b22;\n    border-radius: 0;\n    border-width: 0;\n    border-style: hidden;\n    border-color: #161b22;\n}\ncode{\n    background-color: #343942;\n    border-radius: 3px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: #343942;\n}\n</style>\n</head>\n<body>\n<script src=\"https://cdn.jsdelivr.net/npm/markdown-element/dist/markdown-element.min.js\"></script>\n<div>\n<mark-down>\n\"\"\"\n        html+=out\n        html+=\"\"\"\n</mark-down>\n</div>\n</body>\n</html>\n\"\"\"\n        return html\n    return out"]}